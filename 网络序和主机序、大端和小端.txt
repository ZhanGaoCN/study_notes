先说结论：
1.网络序和主机序是对于同样数据的不同解读顺序。
2.大端和小端是两种数据的不同发送顺序。

什么是大端顺序？大端顺序就是在发一串数据时，按照字节的从高到低的顺序，先发高字节的数据。如对于数据：0x8877665544，大端的发送数据是：0x88、0x77、0x66....
什么是小端顺序？小端顺序就是在发送时按照从低到高的顺序以字节为单位发送数据：0x44、0x55、0x66、0x77....
数据流的最小单位是字节，因此字节内不受影响。
使用大端传输的数据，高字节会先到，因此高字节会存在内存的低位，小端传输则相反。

网络序使用大端的规则，高位字节在数据流的前方，在抓取传输中的数据流来阅读时，比较符合人类的阅读习惯
主机序使用小端规则，因为主机侧涉及到存储空间，低位地址存储低字节便于计算。

网络传输和主机处理过程中的数据顺序规则不一样，会导致对于同一组数据的不同的，错误的解析。为了避免这个问题，需要在传输和主机的接口处进行网络序和主机序的转换。
比如：我在仿真里写了，给模块的input端口输入一个数据：0x11223344，仿真会以网络序也就是大端的方式，按从高到低的顺序发送数据，即0x11、0x22、0x33、0x44.这些
字节被模块收到之后，却会以小端的方式进行解读，会认为最先受到的是最低的字节，因此，在主机侧（模块）侧，重新拼好的数据是：0x44332211，就会发生歧义。因此，在网络IO
处需要加上顺序转换的模块。

如果是测试模块内部的小模块，那么可以认为这些顺序在最外层模块的网路IO处已经做好了，收进来的数满足主机序，那么这时只需要将仿真中发送的数据直接用主机序表示即可。
